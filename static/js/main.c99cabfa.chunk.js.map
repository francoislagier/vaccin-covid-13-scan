{"version":3,"sources":["util/LocationDetail.js","util/ApiCallResult.js","util/DoctolibParser.js","App.js","reportWebVitals.js","index.js"],"names":["LocationDetail","name","link","api","shortList","this","ApiCallResult","locationDetail","result","error","axios","require","dateFormat","proxy","DoctolibParser","limitShortList","defaults","headers","get","currentDate","getLocations","filter","l","map","apiLink","replace","target","logLevel","changeOrigin","then","catch","App","getResult","console","log","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPASeA,EARX,WAAYC,EAAMC,EAAMC,GAAyB,IAApBC,EAAmB,4EAC5CC,KAAKJ,KAAOA,EACZI,KAAKH,KAAOD,EACZI,KAAKF,IAAMA,EACXE,KAAKD,UAAYA,GCGVE,EAPX,WAAYC,EAAgBC,GAAwB,IAAhBC,EAAe,4EAC/CJ,KAAKE,eAAiBA,EACtBF,KAAKG,OAASA,EACdH,KAAKI,MAAQA,GCFfC,EAAQC,EAAQ,IAChBC,EAAaD,EAAQ,KACrBE,EAAQF,EAAQ,KAkDPG,E,WA9CX,aAAqC,IAAzBC,EAAwB,4EAChCV,KAAKU,eAAiBA,EACtBL,EAAMM,SAASC,QAAQC,IAAI,gBAAkB,mBAC7CR,EAAMM,SAASC,QAAQC,IAAI,+BAAiC,IAC5DR,EAAMM,SAASC,QAAQC,IAAI,gCAAkC,yCAC7DR,EAAMM,SAASC,QAAQC,IAAI,gCAAkC,8E,gDAGjE,WACI,MAAO,CACH,IAAIlB,EAAe,OAAQ,OAAQ,kM,uBAI3C,WACI,IACMmB,EAAcP,EAAW,WAG/B,OADkBP,KAAKe,eACNC,QAAO,SAAUC,GAChC,OAAGjB,KAAKU,gBACGO,EAAElB,YAIbC,MAAMkB,KAAI,SAAUD,GAClB,IAAME,EAAUF,EAAEnB,IAAIsB,QAAQ,YAAaN,GAC3CT,EAAMQ,IAAIL,EAAM,OAAQ,CACpBa,OAAQF,EACRG,SAAU,QACVC,cAAc,KAEbC,MAAK,SAAUrB,GAEZ,OAAO,IAAIF,EAAcgB,EAAGd,MAE/BsB,OAAM,SAAUrB,GACb,OAAO,IAAIH,EAAcgB,EAAG,IAAI,a,aC7BrCS,MAbf,WACI,IACMvB,GADS,IAAIM,GACGkB,YAEtB,OADAC,QAAQC,IAAI1B,GAER,qBAAK2B,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACK3B,OCEF4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c99cabfa.chunk.js","sourcesContent":["class LocationDetail {\n    constructor(name, link, api, shortList = false) {\n        this.name = name;\n        this.link = name;\n        this.api = api;\n        this.shortList = shortList\n    }\n}\n\nexport default LocationDetail;\n","class ApiCallResult {\n    constructor(locationDetail, result, error = false) {\n        this.locationDetail = locationDetail;\n        this.result = result;\n        this.error = error\n    }\n}\n\nexport default ApiCallResult;\n","import LocationDetail from \"./LocationDetail\";\nimport ApiCallResult from \"./ApiCallResult\";\nconst axios = require('axios');\nconst dateFormat = require(\"dateformat\");\nconst proxy = require('http-proxy-middleware');\n\n\nclass DoctolibParser {\n    constructor(limitShortList = false) {\n        this.limitShortList = limitShortList;\n        axios.defaults.headers.get['Content-Type'] = 'application/json';\n        axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\n        axios.defaults.headers.get['Access-Control-Allow-Methods'] = 'GET, POST, PATCH, PUT, DELETE, OPTIONS';\n        axios.defaults.headers.get['Access-Control-Allow-Headers'] = 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With';\n    }\n\n    getLocations() {\n        return [\n            new LocationDetail(\"Test\", \"link\", \"https://partners.doctolib.fr/availabilities.json?start_date={FL_DATE}&visit_motive_ids=2552050&agenda_ids=413447&insurance_sector=public&practice_ids=165453&destroy_temporary=true&limit=7\")\n        ]\n    }\n\n    getResult() {\n        const _this = this\n        const currentDate = dateFormat('isoDate')\n        // Loop on all location and grab the API. Wrap Result\n        const locations = this.getLocations()\n        return locations.filter(function (l) {\n          if(this.limitShortList) {\n              return l.shortList\n          } else {\n              return true\n          }\n        },this).map(function (l) {\n            const apiLink = l.api.replace(\"{FL_DATE}\", currentDate)\n            axios.get(proxy('/api', {\n                target: apiLink,\n                logLevel: 'debug',\n                changeOrigin: true\n            }))\n                .then(function (result) {\n                    // handle success\n                    return new ApiCallResult(l, result)\n                })\n                .catch(function (error) {\n                    return new ApiCallResult(l, {}, true)\n\n                })\n        })\n    }\n\n\n}\n\nexport default DoctolibParser;\n","import './App.css';\nimport DoctolibParser from \"./util/DoctolibParser\";\n\nfunction App() {\n    const parser = new DoctolibParser()\n    const result = parser.getResult()\n    console.log(result)\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {result}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}